{{- if (eq .Values.database.type "internal") }}
{{- $database := .Values.database -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "statusbay.database" . }}"
  labels:
{{ include "statusbay.labels" . | indent 4 }}
    component: database
  annotations:
{{ include "statusbay.annotations" . | indent 4 }}
spec:
  selector:
    matchLabels:
{{ include "statusbay.matchLabels" . | indent 6 }}
      component: database
  serviceName: "{{ template "statusbay.database" . }}"
  replicas: 1
  template:
    metadata:
       labels:
{{ include "statusbay.labels" . | indent 8 }}
        component: database
    spec:
      containers:
      - name: mysql
        image: {{ $database.internal.image.repository }}:{{ $database.internal.image.tag }}
        imagePullPolicy: {{ $database.internal.image.pullPolicy }}
        env:
        - name: MYSQL_USER
          value: "{{ $database.username }}"
        - name: MYSQL_PASSWORD
          value: "{{ $database.password }}"
        - name: MYSQL_DATABASE
          value: "{{ $database.schema }}"
        - name: MYSQL_RANDOM_ROOT_PASSWORD
          value: "yes"
        ports:
        - name: mysql
          containerPort: 3306
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
          subPath: mysql
        livenessProbe:
          exec:
            command:
              - bash
              - "-c"
              - |
                mysqladmin -h 127.0.0.1 -u${MYSQL_USER} -p${MYSQL_PASSWORD} ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
              - bash
              - "-c"
              - |
                mysql -h 127.0.0.1 -u${MYSQL_USER} -p${MYSQL_PASSWORD} ${MYSQL_DATABASE} -e 'SELECT 1'
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
{{- if $database.internal.resources }}
        resources:
{{ toYaml $database.internal.resources | indent 10 }}
{{- end }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [{{ $database.internal.persistence.persistentVolumeClaim.accessMode | quote }}]
      {{- if not (eq "-" $database.internal.persistence.persistentVolumeClaim.storageClass) }}
      storageClassName: "{{ $database.internal.persistence.persistentVolumeClaim.storageClass }}"
      {{- end }}
      resources:
        requests:
          cpu: {{ $database.internal.resources.requests.cpu | quote }}
          memory: {{ $database.internal.resources.requests.memory | quote }}
          storage: {{ $database.internal.persistence.persistentVolumeClaim.size | quote }}
{{- end }}
